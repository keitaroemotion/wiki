#!/usr/bin/env python

#
# This scypt is for enabling managing the private/public
# markdown wiki repository.
#
# author: Kei Sugano <tobasojyo@gmail.com>
#

from subprocess import call
import glob
import os
import re
import sys

ARTICLE_LOCATION = "/usr/local/etc/wiki/articles"

def read_article(file):
    f     = open(file)
    lines = f.read()
    f.close()
    return lines

def edit_article(file):
    call(["vim", file])

def args_to_article_name():
    return "_".join(sys.argv[1:])

def args_to_keyword_regex():
    regex = ".+".join(sys.argv[1:])
    print("regex: {}".format(regex))
    return re.compile(regex)

def match(text, regex):
    return regex.match(text) != None

def files(dir, fs = []):
    for d in glob.glob("{}/*".format(dir)):
        os.path.isfile(d) and fs.append(d) or files(fs, d)
    return fs

def matched_files(regex, root_dir):
    return filter(lambda f: match(f, regex) == True, files(root_dir))

def int_input(input):
    return match(input, re.compile("[0-9]+")) and int(input) - 1 or 0

regex = args_to_keyword_regex()
files = matched_files(regex, ARTICLE_LOCATION)

def dispatch():
    #
    # display files
    #
    counter = 0
    for file in files:
        counter += 1
        print("[{}] {}".format(counter, os.path.basename(file)))

    input = raw_input("[l: launch s: save] > ")

    if input == "":
        print("")
        dispatch()
    elif input == "s":
        os.system(
        "cd {}; git init; git add .; git commit".format(ARTICLE_LOCATION)
        )
    elif input == "l":
        #
        # This part has to enable launching website article
        #
        print("")
    elif int_input(input) + 1 > len(files):   
        print("\nindex size out of range\n"); sys.exit()
    else:
        edit_article(files[int_input(input)])

if len(files) == 0:
    edit_article("{}/{}".format(ARTICLE_LOCATION, args_to_article_name())) 
elif len(files) == 1:
    edit_article(files[0]) 
else:
    dispatch()
